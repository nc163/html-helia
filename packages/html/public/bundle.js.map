{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://@ipfs-tag/html/../../node_modules/media-type/lib/mediaType.js","webpack://@ipfs-tag/html/webpack/bootstrap","webpack://@ipfs-tag/html/../core/dist/parse.js","webpack://@ipfs-tag/html/../core/dist/insert/index.js","webpack://@ipfs-tag/html/../core/dist/insert/insertText.js","webpack://@ipfs-tag/html/../core/dist/insert/insertImage.js","webpack://@ipfs-tag/html/../core/dist/insert/insertAudio.js","webpack://@ipfs-tag/html/../core/dist/insert/insertVideo.js","webpack://@ipfs-tag/html/../core/dist/index.js","webpack://@ipfs-tag/html/../core/dist/fetch.js","webpack://@ipfs-tag/html/./src/index.ts"],"sourcesContent":["/**\n * media-type\n * @author Lovell Fuller\n *\n * This code is distributed under the Apache License Version 2.0, the terms of\n * which may be found at http://www.apache.org/licenses/LICENSE-2.0.html\n */\n\nvar MediaType = function() {\n  this.type = null;\n  this._setSubtypeAndSuffix(null);\n  this.parameters = {};\n};\n\nMediaType.prototype.isValid = function() {\n  return this.type !== null && this.subtype !== null && this.subtype !== \"example\";\n};\n\nMediaType.prototype._setSubtypeAndSuffix = function(subtype) {\n  this.subtype = subtype;\n  this.subtypeFacets = [];\n  this.suffix = null;\n  if (subtype) {\n    if (subtype.indexOf(\"+\") > -1 && subtype.substr(-1) !== \"+\") {\n      var fixes = subtype.split(\"+\", 2);\n      this.subtype = fixes[0];\n      this.subtypeFacets = fixes[0].split(\".\");\n      this.suffix = fixes[1];\n    } else {\n      this.subtypeFacets = subtype.split(\".\");\n    }\n  }\n};\n\nMediaType.prototype.hasSuffix = function() {\n  return !!this.suffix;\n};\n\nMediaType.prototype._firstSubtypeFacetEquals = function(str) {\n  return this.subtypeFacets.length > 0 && this.subtypeFacets[0] === str;\n};\n\nMediaType.prototype.isVendor = function() {\n  return this._firstSubtypeFacetEquals(\"vnd\");\n};\n\nMediaType.prototype.isPersonal = function() {\n  return this._firstSubtypeFacetEquals(\"prs\");\n};\n\nMediaType.prototype.isExperimental = function() {\n  return this._firstSubtypeFacetEquals(\"x\") || this.subtype.substring(0, 2).toLowerCase() === \"x-\";\n};\n\nMediaType.prototype.asString = function() {\n  var str = \"\";\n  if (this.isValid()) {\n    str = str + this.type + \"/\" + this.subtype;\n    if (this.hasSuffix()) {\n      str = str + \"+\" + this.suffix;\n    }\n    var parameterKeys = Object.keys(this.parameters);\n    if (parameterKeys.length > 0) {\n      var parameters = [];\n      var that = this;\n      parameterKeys.sort(function(a, b) {\n        return a.localeCompare(b);\n      }).forEach(function(element) {\n        parameters.push(element + \"=\" + wrapQuotes(that.parameters[element]));\n      });\n      str = str + \";\" + parameters.join(\";\");\n    }\n  }\n  return str;\n};\n\nvar wrapQuotes = function(str) {\n  return (str.indexOf(\";\") > -1) ? '\"' + str + '\"' : str;\n};\n\nvar unwrapQuotes = function(str) {\n  return (str.substr(0, 1) === '\"' && str.substr(-1) === '\"') ? str.substr(1, str.length - 2) : str;\n};\n\nvar mediaTypeMatcher = /^(application|audio|font|image|message|model|multipart|text|video|\\*)\\/([a-zA-Z0-9!#$%^&\\*_\\-\\+{}\\|'.`~]{1,127})(;.*)?$/;\n\nvar parameterSplitter = /;(?=(?:[^\\\"]*\\\"[^\\\"]*\\\")*(?![^\\\"]*\\\"))/;\n\nexports.fromString = function(str) {\n  var mediaType = new MediaType();\n  if (str) {\n    var match = str.match(mediaTypeMatcher);\n    if (match && !(match[1] === '*' && match[2] !== '*')) { \n      mediaType.type = match[1];\n      mediaType._setSubtypeAndSuffix(match[2]);\n      if (match[3]) {\n        match[3].substr(1).split(parameterSplitter).forEach(function(parameter) {\n          var keyAndValue = parameter.split('=', 2);\n          if (keyAndValue.length === 2) {\n            mediaType.parameters[keyAndValue[0].toLowerCase().trim()] = unwrapQuotes(keyAndValue[1].trim());\n          }\n        });\n      }\n    }\n  }\n  return mediaType;\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","function parse(cid, type, subtype, encord) {\n    // let _cid = cid\n    // if (typeof cid === 'string') _cid = CID.parse(cid)\n    // else _cid = cid\n    return {\n        cid: cid,\n        mediatype: {\n            type: type.toLowerCase(),\n            subtype: subtype.toLowerCase(),\n        },\n        encord: encord || undefined\n    };\n    // return {\n    //   cid: cid,\n    //   mediatype: {\n    //     type: MediaType.fromString(element.dataset.mediatype).type.toLowerCase(),\n    //     subtype: MediaType.fromString(element.dataset.mediatype).subtype.toLowerCase(),\n    //   },\n    //   encord: element.dataset.encord || undefined\n    // };\n}\nexport default parse;\n","import insertAudio from './insertAudio';\nimport insertVideo from './insertVideo';\nimport insertImage from './insertImage';\nimport insertText from './insertText';\nasync function insert(element, params, blob) {\n    const reader = new FileReader();\n    switch (params.mediatype.type.toLowerCase()) {\n        case 'text':\n            insertText(element, params, blob, reader);\n            break;\n        case 'image':\n            insertImage(element, params, blob, reader);\n            break;\n        case 'audio':\n            insertAudio(element, params, blob, reader);\n            break;\n        case 'video':\n            insertVideo(element, params, blob, reader);\n            break;\n        default:\n            return false;\n    }\n}\nexport default insert;\n","import MediaType from 'media-type';\n/**\n *\n * @param {IPFS} ipfs\n */\nasync function insertText(element, params, blob, reader) {\n    const media = MediaType.fromString(element.dataset.mediatype);\n    const encord = element.dataset?.encord || null;\n    reader.onload = (event) => {\n        if (typeof event.target?.result !== 'string')\n            return false;\n        switch (media.subtype) {\n            case 'plain':\n                element.innerText = escapeHtml(replaceControlCharacters(event.target.result));\n                break;\n            case 'html':\n                return false;\n                // element.innerHTML = replaceControlCharacters(event.target.result);\n                break;\n            case 'css':\n                return false;\n                // element.innerHTML = event.target.result;\n                break;\n            case 'javascript':\n                return false;\n                // element.innerHTML = event.target.result;\n                break;\n            default:\n        }\n    };\n    reader.readAsText(blob, params.encord);\n}\nfunction replaceControlCharacters(str, replacementStr = '') {\n    return str; //.replace(/[\\x00-\\x09\\x0B\\x0C\\x0E-\\x1F\\x7F-\\x9F]/g,replacementStr)\n}\nfunction escapeHtml(htmlStr) {\n    return htmlStr.replace(/&/g, \"&amp;\")\n        .replace(/</g, \"&lt;\")\n        .replace(/>/g, \"&gt;\")\n        .replace(/\"/g, \"&quot;\")\n        .replace(/'/g, \"&#39;\");\n}\nexport default insertText;\n","/**\n *\n * @param {IPFS} ipfs\n */\nasync function insertImage(element, params, blob, reader) {\n    const tagname = element.tagName;\n    if (element == null)\n        return false;\n    reader.addEventListener('load', (event) => {\n        if (typeof event.target?.result !== 'string')\n            return false;\n        switch (element) {\n            case element:\n                element.src = event.target.result;\n                break;\n            // case element as HTMLCanvasElement:\n            //   const img = new Image();\n            //   img.src = event.target.result;\n            //   element.clearRect(0, 0, element.width, element.height);\n            //   element.getContext(\"2d\").drawImage(img, 0, 0);\n            //   break;\n            default:\n                break;\n        }\n    });\n    reader.readAsDataURL(blob);\n}\nexport default insertImage;\n","/**\n *\n * @param {Blob} blob\n */\nasync function insertAudio(element, params, blob, reader) {\n    const tagname = element.tagName;\n    // const media = mediatype.fromString(element.dataset.mediatype)\n    // const encord = element.dataset?.encord || null\n    reader.addEventListener('load', (event) => {\n        if (typeof event.target?.result !== 'string')\n            return false;\n        if (tagname === 'AUDIO') {\n            element.src = event.target.result;\n        }\n    });\n    reader.readAsDataURL(blob);\n}\nexport default insertAudio;\n","/**\n *\n * @param {Blob} blob\n */\nasync function insertVideo(element, params, blob, reader) {\n    const tagname = element.tagName;\n    reader.addEventListener('load', (event) => {\n        if (typeof event.target?.result !== 'string')\n            return false;\n        if (tagname === 'VIDEO') {\n            element.src = event.target.result;\n        }\n    });\n    reader.readAsDataURL(blob);\n}\nexport default insertVideo;\n","// @ts-ignore\nimport MediaType from 'media-type';\nimport parse from './parse';\nimport fetch from './fetch';\nimport insert from './insert';\n/**\n *\n * @param ipfs IPFS\n * @param options Options\n * @returns\n */\nconst IPFSTag = async (ipfs, element) => {\n    if (element.dataset.cid !== \"string\")\n        return false;\n    let cid = element.dataset.cid;\n    let type = MediaType.fromString(element.dataset.mediatype).type.toLowerCase();\n    let subtype = MediaType.fromString(element.dataset.mediatype).subtype.toLowerCase();\n    let encord = element.dataset.encord;\n    let params = parse(cid, type, subtype, encord);\n    if (!params)\n        return false;\n    let blob = await fetch(ipfs, params);\n    insert(element, params, blob);\n};\nexport default IPFSTag;\nexport { parse, fetch, insert };\n","/**\n *\n * @param {*} ipfs\n * @param {*} this.element\n * @returns {ArrayBuffer} content\n */\nasync function fetch(ipfs, context) {\n    /**\n     * ipfs.cat\n     * https://github.com/ipfs/js-ipfs/blob/master/docs/core-api/FILES.md#ipfscatipfspath-options\n     * https://discuss.ipfs.tech/t/how-to-ipfs-dag-get-the-image-in-browser/15938/3\n     */\n    const content = [];\n    for await (const chunk of ipfs.cat(context.cid)) {\n        content.push(chunk);\n    }\n    const blob = new Blob(content, { type: context.mediatype.type });\n    return blob;\n}\nexport default fetch;\n","import IPFSTag from \"@ipfs-tag/core\";\nwindow.addEventListener('load', () => {\n    console.log('Window loaded');\n    console.log(IPFSTag);\n});\n"],"names":["MediaType","this","type","_setSubtypeAndSuffix","parameters","prototype","isValid","subtype","subtypeFacets","suffix","indexOf","substr","fixes","split","hasSuffix","_firstSubtypeFacetEquals","str","length","isVendor","isPersonal","isExperimental","substring","toLowerCase","asString","parameterKeys","Object","keys","that","sort","a","b","localeCompare","forEach","element","push","wrapQuotes","join","mediaTypeMatcher","parameterSplitter","exports","fromString","mediaType","match","parameter","keyAndValue","trim","unwrapQuotes","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","module","__webpack_modules__","async","params","blob","reader","FileReader","mediatype","media","dataset","encord","onload","event","target","result","innerText","replace","readAsText","tagName","addEventListener","src","readAsDataURL","tagname","ipfs","cid","context","content","chunk","cat","Blob","window","console","log"],"sourceRoot":""}