{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;AAAa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,kBAAkB;AAClB;;;;;;;;;;AC/Ca;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,iBAAiB;AACjB,uBAAuB,mBAAO,CAAC,2IAAc;AAC7C;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,GAAG;AACd,aAAa,aAAa;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,8BAA8B;AAC7D;AACA,iBAAiB;AACjB;;;;;;;;;;ACzBa;AACb;AACA;AACA;AACA;AACA,eAAe,oCAAoC;AACnD;AACA;AACA,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA,0CAA0C,4BAA4B;AACtE,CAAC;AACD;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,qBAAqB,GAAG,kBAAkB,GAAG,iBAAiB;AAC9D,4BAA4B,mBAAO,CAAC,sIAAS;AAC7C,sCAAsC,mBAAO,CAAC,wDAAa;AAC3D,oBAAoB,mBAAO,CAAC,wCAAa;AACzC,6CAA4C,EAAE,qCAAqC,iCAAiC,EAAC;AACrH,qBAAqB,mBAAO,CAAC,gDAAc;AAC3C,8CAA6C,EAAE,qCAAqC,mCAAmC,EAAC;AACxH,wBAAwB,mBAAO,CAAC,sDAAiB;AACjD,iDAAgD,EAAE,qCAAqC,yCAAyC,EAAC;AACjI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAe;AACf;;;;;;;;;;AC5Da;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,qBAAqB;AACrB,sBAAsB,mBAAO,CAAC,0DAAe;AAC7C,sBAAsB,mBAAO,CAAC,0DAAe;AAC7C,sBAAsB,mBAAO,CAAC,0DAAe;AAC7C,qBAAqB,mBAAO,CAAC,wDAAc;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;;;;;;;;;;AC1Ba;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;;;;;;;;;;ACfa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;;;;;;;;;;ACfa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA,gBAAgB;AAChB;AACA;AACA,uCAAuC;AACvC,4BAA4B;AAC5B,4BAA4B;AAC5B,8BAA8B;AAC9B,6BAA6B;AAC7B;AACA;;;;;;;;;;ACpBa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;;;;;;;;;;ACfA;AACA;AACA;AACA;AACA;;AAEY;;AAEZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC,kCAAkC;AAClC,kCAAkC;AAClC,kCAAkC;AAClC,kCAAkC;AAClC,kCAAkC;AAClC;AACA,2DAA2D,MAAM;AACjE,uDAAuD,MAAM;AAC7D,qDAAqD,MAAM,oCAAoC,MAAM;;AAErG;AACA;AACA;;AAEA,cAAc;AACd,aAAa;AACb,YAAY;;AAEZ;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;UC9IA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;UEtBA;UACA;UACA;UACA","sources":["webpack://@html-ipfs/core/./dist/decodeBlob/index.js","webpack://@html-ipfs/core/./dist/fetchBlob.js","webpack://@html-ipfs/core/./dist/index.js","webpack://@html-ipfs/core/./dist/insertContent/index.js","webpack://@html-ipfs/core/./dist/insertContent/insertAudio.js","webpack://@html-ipfs/core/./dist/insertContent/insertImage.js","webpack://@html-ipfs/core/./dist/insertContent/insertText.js","webpack://@html-ipfs/core/./dist/insertContent/insertVideo.js","webpack://@html-ipfs/core/./node_modules/media-typer/index.js","webpack://@html-ipfs/core/webpack/bootstrap","webpack://@html-ipfs/core/webpack/before-startup","webpack://@html-ipfs/core/webpack/startup","webpack://@html-ipfs/core/webpack/after-startup"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decodeBlob = void 0;\nfunction decodeBlob(blob, mediaType) {\n    return new Promise((resolve, reject) => {\n        let reader = new FileReader();\n        reader.onloadend = function (e) {\n            if (e.target && e.target.readyState == FileReader.DONE) {\n                let data = e.target.result;\n                if (data == null) {\n                    reject('Failed to load blob');\n                    return;\n                }\n                switch (mediaType.type) {\n                    case 'text':\n                        resolve(data);\n                        break;\n                    case 'image':\n                        let img = new Image();\n                        img.onload = function () {\n                            resolve(img);\n                        };\n                        img.src = URL.createObjectURL(blob);\n                        break;\n                    case 'audio':\n                    case 'video':\n                        let media = new Audio();\n                        media.src = URL.createObjectURL(blob);\n                        media.oncanplaythrough = function () {\n                            resolve(media);\n                        };\n                        media.load();\n                        break;\n                    default:\n                        reject('Unsupported media type: ' + mediaType);\n                }\n            }\n        };\n        if (mediaType.type.startsWith('text') || mediaType.type === 'application/json') {\n            reader.readAsText(blob);\n        }\n        else {\n            reader.readAsDataURL(blob);\n        }\n    });\n}\nexports.decodeBlob = decodeBlob;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fetchBlob = void 0;\nconst multiformats_1 = require(\"multiformats\");\n/**\n *\n * @param {Helia<Libp2p>} node\n * @param {*} this.element\n * @returns {ArrayBuffer} content\n */\nasync function fetchBlob(fs, cid, type, endings = \"transparent\") {\n    /**\n     * ipfs.cat\n     * https://github.com/ipfs/js-ipfs/blob/master/docs/core-api/FILES.md#ipfscatipfspath-options\n     * https://discuss.ipfs.tech/t/how-to-ipfs-dag-get-the-image-in-browser/15938/3\n     */\n    const content = [];\n    if (typeof cid === \"string\")\n        cid = multiformats_1.CID.parse(cid);\n    for await (const chunk of fs.cat(cid)) {\n        content.push(chunk);\n    }\n    return new Blob(content, { type: type, endings: endings });\n}\nexports.fetchBlob = fetchBlob;\n//# sourceMappingURL=fetchBlob.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.insertContent = exports.decodeBlob = exports.fetchBlob = void 0;\nconst isIPFS = __importStar(require(\"is-ipfs\"));\nconst media_typer_1 = __importDefault(require(\"media-typer\"));\nconst fetchBlob_1 = require(\"./fetchBlob\");\nObject.defineProperty(exports, \"fetchBlob\", { enumerable: true, get: function () { return fetchBlob_1.fetchBlob; } });\nconst decodeBlob_1 = require(\"./decodeBlob\");\nObject.defineProperty(exports, \"decodeBlob\", { enumerable: true, get: function () { return decodeBlob_1.decodeBlob; } });\nconst insertContent_1 = require(\"./insertContent\");\nObject.defineProperty(exports, \"insertContent\", { enumerable: true, get: function () { return insertContent_1.insertContent; } });\n/**\n *\n * @param ipfs IPFS\n * @param options Options\n * @returns\n */\nconst HTMLIpfs = async (fs, element) => {\n    if (element.dataset.cid !== \"string\")\n        return false;\n    if (isIPFS.cid(element.dataset.cid) === false)\n        return false;\n    let cid = element.dataset.cid;\n    if (typeof element.dataset.mediatype !== \"string\")\n        return false;\n    let mediatype = media_typer_1.default.parse(element.dataset.mediatype);\n    let type = mediatype.type;\n    let blob = await (0, fetchBlob_1.fetchBlob)(fs, cid, type);\n    let content = await (0, decodeBlob_1.decodeBlob)(blob, mediatype);\n    if (content == null)\n        throw new Error(\"decode error\");\n    (0, insertContent_1.insertContent)(element, mediatype, content);\n};\nexports.default = HTMLIpfs;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.insertContent = void 0;\nconst insertAudio_1 = require(\"./insertAudio\");\nconst insertVideo_1 = require(\"./insertVideo\");\nconst insertImage_1 = require(\"./insertImage\");\nconst insertText_1 = require(\"./insertText\");\nfunction insertContent(element, mediaType, content) {\n    switch (mediaType.type) {\n        case 'text':\n            (0, insertText_1.insertText)(element, content);\n            break;\n        case 'image':\n            (0, insertImage_1.insertImage)(element, content);\n            break;\n        case 'audio':\n            (0, insertAudio_1.insertAudio)(element, content);\n            break;\n        case 'video':\n            (0, insertVideo_1.insertVideo)(element, content);\n            break;\n        default:\n            return false;\n    }\n}\nexports.insertContent = insertContent;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.insertAudio = void 0;\n/**\n *\n */\nfunction insertAudio(element, audio) {\n    try {\n        element.src = audio.src;\n    }\n    catch (error) {\n        console.error(error);\n    }\n}\nexports.insertAudio = insertAudio;\n//# sourceMappingURL=insertAudio.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.insertImage = void 0;\n/**\n *\n */\nfunction insertImage(element, image) {\n    try {\n        element.src = image.src;\n    }\n    catch (error) {\n        console.error(error);\n    }\n}\nexports.insertImage = insertImage;\n//# sourceMappingURL=insertImage.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.insertText = void 0;\n/**\n *\n */\nfunction insertText(element, text) {\n    element.innerText = escapeHtml(replaceControlCharacters(text));\n}\nexports.insertText = insertText;\nfunction replaceControlCharacters(str, replacementStr = '') {\n    return str; //.replace(/[\\x00-\\x09\\x0B\\x0C\\x0E-\\x1F\\x7F-\\x9F]/g,replacementStr)\n}\nfunction escapeHtml(htmlStr) {\n    return htmlStr.replace(/&/g, \"&amp;\")\n        .replace(/</g, \"&lt;\")\n        .replace(/>/g, \"&gt;\")\n        .replace(/\"/g, \"&quot;\")\n        .replace(/'/g, \"&#39;\");\n}\n//# sourceMappingURL=insertText.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.insertVideo = void 0;\n/**\n *\n */\nfunction insertVideo(element, video) {\n    try {\n        element.src = video.src;\n    }\n    catch (error) {\n        console.error(error);\n    }\n}\nexports.insertVideo = insertVideo;\n//# sourceMappingURL=insertVideo.js.map","/*!\n * media-typer\n * Copyright(c) 2014-2017 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * RegExp to match type in RFC 6838\n *\n * type-name = restricted-name\n * subtype-name = restricted-name\n * restricted-name = restricted-name-first *126restricted-name-chars\n * restricted-name-first  = ALPHA / DIGIT\n * restricted-name-chars  = ALPHA / DIGIT / \"!\" / \"#\" /\n *                          \"$\" / \"&\" / \"-\" / \"^\" / \"_\"\n * restricted-name-chars =/ \".\" ; Characters before first dot always\n *                              ; specify a facet name\n * restricted-name-chars =/ \"+\" ; Characters after last plus always\n *                              ; specify a structured syntax suffix\n * ALPHA =  %x41-5A / %x61-7A   ; A-Z / a-z\n * DIGIT =  %x30-39             ; 0-9\n */\nvar SUBTYPE_NAME_REGEXP = /^[A-Za-z0-9][A-Za-z0-9!#$&^_.-]{0,126}$/\nvar TYPE_NAME_REGEXP = /^[A-Za-z0-9][A-Za-z0-9!#$&^_-]{0,126}$/\nvar TYPE_REGEXP = /^ *([A-Za-z0-9][A-Za-z0-9!#$&^_-]{0,126})\\/([A-Za-z0-9][A-Za-z0-9!#$&^_.+-]{0,126}) *$/\n\n/**\n * Module exports.\n */\n\nexports.format = format\nexports.parse = parse\nexports.test = test\n\n/**\n * Format object to media type.\n *\n * @param {object} obj\n * @return {string}\n * @public\n */\n\nfunction format (obj) {\n  if (!obj || typeof obj !== 'object') {\n    throw new TypeError('argument obj is required')\n  }\n\n  var subtype = obj.subtype\n  var suffix = obj.suffix\n  var type = obj.type\n\n  if (!type || !TYPE_NAME_REGEXP.test(type)) {\n    throw new TypeError('invalid type')\n  }\n\n  if (!subtype || !SUBTYPE_NAME_REGEXP.test(subtype)) {\n    throw new TypeError('invalid subtype')\n  }\n\n  // format as type/subtype\n  var string = type + '/' + subtype\n\n  // append +suffix\n  if (suffix) {\n    if (!TYPE_NAME_REGEXP.test(suffix)) {\n      throw new TypeError('invalid suffix')\n    }\n\n    string += '+' + suffix\n  }\n\n  return string\n}\n\n/**\n * Test media type.\n *\n * @param {string} string\n * @return {object}\n * @public\n */\n\nfunction test (string) {\n  if (!string) {\n    throw new TypeError('argument string is required')\n  }\n\n  if (typeof string !== 'string') {\n    throw new TypeError('argument string is required to be a string')\n  }\n\n  return TYPE_REGEXP.test(string.toLowerCase())\n}\n\n/**\n * Parse media type to object.\n *\n * @param {string} string\n * @return {object}\n * @public\n */\n\nfunction parse (string) {\n  if (!string) {\n    throw new TypeError('argument string is required')\n  }\n\n  if (typeof string !== 'string') {\n    throw new TypeError('argument string is required to be a string')\n  }\n\n  var match = TYPE_REGEXP.exec(string.toLowerCase())\n\n  if (!match) {\n    throw new TypeError('invalid media type')\n  }\n\n  var type = match[1]\n  var subtype = match[2]\n  var suffix\n\n  // suffix after last +\n  var index = subtype.lastIndexOf('+')\n  if (index !== -1) {\n    suffix = subtype.substr(index + 1)\n    subtype = subtype.substr(0, index)\n  }\n\n  return new MediaType(type, subtype, suffix)\n}\n\n/**\n * Class for MediaType object.\n * @public\n */\n\nfunction MediaType (type, subtype, suffix) {\n  this.type = type\n  this.subtype = subtype\n  this.suffix = suffix\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./dist/index.js\");\n",""],"names":[],"sourceRoot":""}