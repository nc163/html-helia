{"version":3,"file":"bundle.js","mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP,oBAAoB,sBAAsB;AAC1C;AACA;AACA;AACA;;AAEA;AACA,wBAAwB;AACxB;;AAEA;AACA;AACA;;AAEA,yHAAyH,QAAQ,MAAM,GAAG;;AAE1I,0BAA0B;;AAE1B,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AC1GA;AACA;AACA,WAAW,GAAG;AACd,WAAW,GAAG;AACd,aAAa,aAAa;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,8BAA8B;AACnE;AACA;AACA,iEAAe,KAAK,EAAC;;;;;;;;;;;;;;;;;;;;ACnBmB;AACA;AACA;AACF;AACtC;AACA;AACA;AACA;AACA,YAAY,uDAAU;AACtB;AACA;AACA,YAAY,wDAAW;AACvB;AACA;AACA,YAAY,wDAAW;AACvB;AACA;AACA,YAAY,wDAAW;AACvB;AACA;AACA;AACA;AACA;AACA,iEAAe,MAAM,EAAC;;;;;;;;;;;;;;;;ACvBtB;AACA;AACA,WAAW,MAAM;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,iEAAe,WAAW,EAAC;;;;;;;;;;;;;;;;ACjB3B;AACA;AACA,WAAW,MAAM;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,iEAAe,WAAW,EAAC;;;;;;;;;;;;;;;;;AC3BQ;AACnC;AACA;AACA,WAAW,MAAM;AACjB;AACA;AACA,kBAAkB,kDAAoB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,uCAAuC;AACvC,4BAA4B;AAC5B,4BAA4B;AAC5B,8BAA8B;AAC9B,6BAA6B;AAC7B;AACA,iEAAe,UAAU,EAAC;;;;;;;;;;;;;;;;AC1C1B;AACA;AACA,WAAW,MAAM;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,iEAAe,WAAW,EAAC;;;;;;;;;;;;;;;;ACf3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,iEAAe,KAAK,EAAC;;;;;;;UCrBrB;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;;;;;ACNA;AACmC;AACP;AACA;AACE;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,kDAAoB;AACnC,kBAAkB,kDAAoB;AACtC;AACA,iBAAiB,kDAAK;AACtB;AACA;AACA,qBAAqB,kDAAK;AAC1B,IAAI,mDAAM;AACV;AACA,iEAAe,OAAO,EAAC;AACS","sources":["webpack://@ipfs-tag/core/../../node_modules/media-type/lib/mediaType.js","webpack://@ipfs-tag/core/./src/fetch.ts","webpack://@ipfs-tag/core/./src/insert/index.ts","webpack://@ipfs-tag/core/./src/insert/insertAudio.ts","webpack://@ipfs-tag/core/./src/insert/insertImage.ts","webpack://@ipfs-tag/core/./src/insert/insertText.ts","webpack://@ipfs-tag/core/./src/insert/insertVideo.ts","webpack://@ipfs-tag/core/./src/parse.ts","webpack://@ipfs-tag/core/webpack/bootstrap","webpack://@ipfs-tag/core/webpack/runtime/define property getters","webpack://@ipfs-tag/core/webpack/runtime/hasOwnProperty shorthand","webpack://@ipfs-tag/core/webpack/runtime/make namespace object","webpack://@ipfs-tag/core/./src/index.ts"],"sourcesContent":["/**\n * media-type\n * @author Lovell Fuller\n *\n * This code is distributed under the Apache License Version 2.0, the terms of\n * which may be found at http://www.apache.org/licenses/LICENSE-2.0.html\n */\n\nvar MediaType = function() {\n  this.type = null;\n  this._setSubtypeAndSuffix(null);\n  this.parameters = {};\n};\n\nMediaType.prototype.isValid = function() {\n  return this.type !== null && this.subtype !== null && this.subtype !== \"example\";\n};\n\nMediaType.prototype._setSubtypeAndSuffix = function(subtype) {\n  this.subtype = subtype;\n  this.subtypeFacets = [];\n  this.suffix = null;\n  if (subtype) {\n    if (subtype.indexOf(\"+\") > -1 && subtype.substr(-1) !== \"+\") {\n      var fixes = subtype.split(\"+\", 2);\n      this.subtype = fixes[0];\n      this.subtypeFacets = fixes[0].split(\".\");\n      this.suffix = fixes[1];\n    } else {\n      this.subtypeFacets = subtype.split(\".\");\n    }\n  }\n};\n\nMediaType.prototype.hasSuffix = function() {\n  return !!this.suffix;\n};\n\nMediaType.prototype._firstSubtypeFacetEquals = function(str) {\n  return this.subtypeFacets.length > 0 && this.subtypeFacets[0] === str;\n};\n\nMediaType.prototype.isVendor = function() {\n  return this._firstSubtypeFacetEquals(\"vnd\");\n};\n\nMediaType.prototype.isPersonal = function() {\n  return this._firstSubtypeFacetEquals(\"prs\");\n};\n\nMediaType.prototype.isExperimental = function() {\n  return this._firstSubtypeFacetEquals(\"x\") || this.subtype.substring(0, 2).toLowerCase() === \"x-\";\n};\n\nMediaType.prototype.asString = function() {\n  var str = \"\";\n  if (this.isValid()) {\n    str = str + this.type + \"/\" + this.subtype;\n    if (this.hasSuffix()) {\n      str = str + \"+\" + this.suffix;\n    }\n    var parameterKeys = Object.keys(this.parameters);\n    if (parameterKeys.length > 0) {\n      var parameters = [];\n      var that = this;\n      parameterKeys.sort(function(a, b) {\n        return a.localeCompare(b);\n      }).forEach(function(element) {\n        parameters.push(element + \"=\" + wrapQuotes(that.parameters[element]));\n      });\n      str = str + \";\" + parameters.join(\";\");\n    }\n  }\n  return str;\n};\n\nvar wrapQuotes = function(str) {\n  return (str.indexOf(\";\") > -1) ? '\"' + str + '\"' : str;\n};\n\nvar unwrapQuotes = function(str) {\n  return (str.substr(0, 1) === '\"' && str.substr(-1) === '\"') ? str.substr(1, str.length - 2) : str;\n};\n\nvar mediaTypeMatcher = /^(application|audio|font|image|message|model|multipart|text|video|\\*)\\/([a-zA-Z0-9!#$%^&\\*_\\-\\+{}\\|'.`~]{1,127})(;.*)?$/;\n\nvar parameterSplitter = /;(?=(?:[^\\\"]*\\\"[^\\\"]*\\\")*(?![^\\\"]*\\\"))/;\n\nexports.fromString = function(str) {\n  var mediaType = new MediaType();\n  if (str) {\n    var match = str.match(mediaTypeMatcher);\n    if (match && !(match[1] === '*' && match[2] !== '*')) { \n      mediaType.type = match[1];\n      mediaType._setSubtypeAndSuffix(match[2]);\n      if (match[3]) {\n        match[3].substr(1).split(parameterSplitter).forEach(function(parameter) {\n          var keyAndValue = parameter.split('=', 2);\n          if (keyAndValue.length === 2) {\n            mediaType.parameters[keyAndValue[0].toLowerCase().trim()] = unwrapQuotes(keyAndValue[1].trim());\n          }\n        });\n      }\n    }\n  }\n  return mediaType;\n};\n","/**\n *\n * @param {*} ipfs\n * @param {*} this.element\n * @returns {ArrayBuffer} content\n */\nasync function fetch(ipfs, context) {\n    /**\n     * ipfs.cat\n     * https://github.com/ipfs/js-ipfs/blob/master/docs/core-api/FILES.md#ipfscatipfspath-options\n     * https://discuss.ipfs.tech/t/how-to-ipfs-dag-get-the-image-in-browser/15938/3\n     */\n    const content = [];\n    for await (const chunk of ipfs.cat(context.cid)) {\n        content.push(chunk);\n    }\n    const blob = new Blob(content, { type: context.mediatype.type });\n    return blob;\n}\nexport default fetch;\n","import insertAudio from './insertAudio';\nimport insertVideo from './insertVideo';\nimport insertImage from './insertImage';\nimport insertText from './insertText';\nasync function insert(element, params, blob) {\n    const reader = new FileReader();\n    switch (params.mediatype.type.toLowerCase()) {\n        case 'text':\n            insertText(element, params, blob, reader);\n            break;\n        case 'image':\n            insertImage(element, params, blob, reader);\n            break;\n        case 'audio':\n            insertAudio(element, params, blob, reader);\n            break;\n        case 'video':\n            insertVideo(element, params, blob, reader);\n            break;\n        default:\n            return false;\n    }\n}\nexport default insert;\n","/**\n *\n * @param {Blob} blob\n */\nasync function insertAudio(element, params, blob, reader) {\n    const tagname = element.tagName;\n    // const media = mediatype.fromString(element.dataset.mediatype)\n    // const encord = element.dataset?.encord || null\n    reader.addEventListener('load', (event) => {\n        if (typeof event.target?.result !== 'string')\n            return false;\n        if (tagname === 'AUDIO') {\n            element.src = event.target.result;\n        }\n    });\n    reader.readAsDataURL(blob);\n}\nexport default insertAudio;\n","/**\n *\n * @param {IPFS} ipfs\n */\nasync function insertImage(element, params, blob, reader) {\n    const tagname = element.tagName;\n    if (element == null)\n        return false;\n    reader.addEventListener('load', (event) => {\n        if (typeof event.target?.result !== 'string')\n            return false;\n        switch (element) {\n            case element:\n                element.src = event.target.result;\n                break;\n            // case element as HTMLCanvasElement:\n            //   const img = new Image();\n            //   img.src = event.target.result;\n            //   element.clearRect(0, 0, element.width, element.height);\n            //   element.getContext(\"2d\").drawImage(img, 0, 0);\n            //   break;\n            default:\n                break;\n        }\n    });\n    reader.readAsDataURL(blob);\n}\nexport default insertImage;\n","import MediaType from 'media-type';\n/**\n *\n * @param {IPFS} ipfs\n */\nasync function insertText(element, params, blob, reader) {\n    const media = MediaType.fromString(element.dataset.mediatype);\n    const encord = element.dataset?.encord || null;\n    reader.onload = (event) => {\n        if (typeof event.target?.result !== 'string')\n            return false;\n        switch (media.subtype) {\n            case 'plain':\n                element.innerText = escapeHtml(replaceControlCharacters(event.target.result));\n                break;\n            case 'html':\n                return false;\n                // element.innerHTML = replaceControlCharacters(event.target.result);\n                break;\n            case 'css':\n                return false;\n                // element.innerHTML = event.target.result;\n                break;\n            case 'javascript':\n                return false;\n                // element.innerHTML = event.target.result;\n                break;\n            default:\n        }\n    };\n    reader.readAsText(blob, params.encord);\n}\nfunction replaceControlCharacters(str, replacementStr = '') {\n    return str; //.replace(/[\\x00-\\x09\\x0B\\x0C\\x0E-\\x1F\\x7F-\\x9F]/g,replacementStr)\n}\nfunction escapeHtml(htmlStr) {\n    return htmlStr.replace(/&/g, \"&amp;\")\n        .replace(/</g, \"&lt;\")\n        .replace(/>/g, \"&gt;\")\n        .replace(/\"/g, \"&quot;\")\n        .replace(/'/g, \"&#39;\");\n}\nexport default insertText;\n","/**\n *\n * @param {Blob} blob\n */\nasync function insertVideo(element, params, blob, reader) {\n    const tagname = element.tagName;\n    reader.addEventListener('load', (event) => {\n        if (typeof event.target?.result !== 'string')\n            return false;\n        if (tagname === 'VIDEO') {\n            element.src = event.target.result;\n        }\n    });\n    reader.readAsDataURL(blob);\n}\nexport default insertVideo;\n","function parse(cid, type, subtype, encord) {\n    // let _cid = cid\n    // if (typeof cid === 'string') _cid = CID.parse(cid)\n    // else _cid = cid\n    return {\n        cid: cid,\n        mediatype: {\n            type: type.toLowerCase(),\n            subtype: subtype.toLowerCase(),\n        },\n        encord: encord || undefined\n    };\n    // return {\n    //   cid: cid,\n    //   mediatype: {\n    //     type: MediaType.fromString(element.dataset.mediatype).type.toLowerCase(),\n    //     subtype: MediaType.fromString(element.dataset.mediatype).subtype.toLowerCase(),\n    //   },\n    //   encord: element.dataset.encord || undefined\n    // };\n}\nexport default parse;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// @ts-ignore\nimport MediaType from 'media-type';\nimport parse from './parse';\nimport fetch from './fetch';\nimport insert from './insert';\n/**\n *\n * @param ipfs IPFS\n * @param options Options\n * @returns\n */\nconst IPFSTag = async (ipfs, element) => {\n    if (element.dataset.cid !== \"string\")\n        return false;\n    let cid = element.dataset.cid;\n    let type = MediaType.fromString(element.dataset.mediatype).type.toLowerCase();\n    let subtype = MediaType.fromString(element.dataset.mediatype).subtype.toLowerCase();\n    let encord = element.dataset.encord;\n    let params = parse(cid, type, subtype, encord);\n    if (!params)\n        return false;\n    let blob = await fetch(ipfs, params);\n    insert(element, params, blob);\n};\nexport default IPFSTag;\nexport { parse, fetch, insert };\n"],"names":[],"sourceRoot":""}