(()=>{var e={388:(e,t)=>{var r=function(){this.type=null,this._setSubtypeAndSuffix(null),this.parameters={}};r.prototype.isValid=function(){return null!==this.type&&null!==this.subtype&&"example"!==this.subtype},r.prototype._setSubtypeAndSuffix=function(e){if(this.subtype=e,this.subtypeFacets=[],this.suffix=null,e)if(e.indexOf("+")>-1&&"+"!==e.substr(-1)){var t=e.split("+",2);this.subtype=t[0],this.subtypeFacets=t[0].split("."),this.suffix=t[1]}else this.subtypeFacets=e.split(".")},r.prototype.hasSuffix=function(){return!!this.suffix},r.prototype._firstSubtypeFacetEquals=function(e){return this.subtypeFacets.length>0&&this.subtypeFacets[0]===e},r.prototype.isVendor=function(){return this._firstSubtypeFacetEquals("vnd")},r.prototype.isPersonal=function(){return this._firstSubtypeFacetEquals("prs")},r.prototype.isExperimental=function(){return this._firstSubtypeFacetEquals("x")||"x-"===this.subtype.substring(0,2).toLowerCase()},r.prototype.asString=function(){var e="";if(this.isValid()){e=e+this.type+"/"+this.subtype,this.hasSuffix()&&(e=e+"+"+this.suffix);var t=Object.keys(this.parameters);if(t.length>0){var r=[],s=this;t.sort((function(e,t){return e.localeCompare(t)})).forEach((function(e){r.push(e+"="+n(s.parameters[e]))})),e=e+";"+r.join(";")}}return e};var n=function(e){return e.indexOf(";")>-1?'"'+e+'"':e}}},t={};function r(n){var s=t[n];if(void 0!==s)return s.exports;var i=t[n]={exports:{}};return e[n](i,i.exports,r),i.exports}(()=>{"use strict";r(388),Math.pow(2,31),Math.pow(2,7),Math.pow(2,14),Math.pow(2,21),Math.pow(2,28),Math.pow(2,35),Math.pow(2,42),Math.pow(2,49),Math.pow(2,56),Math.pow(2,63),new Uint8Array(0);class e{constructor(e,t,r){this.name=e,this.prefix=t,this.baseEncode=r}encode(e){if(e instanceof Uint8Array)return`${this.prefix}${this.baseEncode(e)}`;throw Error("Unknown type, must be binary type")}}class t{constructor(e,t,r){if(this.name=e,this.prefix=t,void 0===t.codePointAt(0))throw new Error("Invalid prefix character");this.prefixCodePoint=t.codePointAt(0),this.baseDecode=r}decode(e){if("string"==typeof e){if(e.codePointAt(0)!==this.prefixCodePoint)throw Error(`Unable to decode multibase string ${JSON.stringify(e)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);return this.baseDecode(e.slice(this.prefix.length))}throw Error("Can only multibase decode strings")}or(e){return s(this,e)}}class n{constructor(e){this.decoders=e}or(e){return s(this,e)}decode(e){const t=e[0],r=this.decoders[t];if(r)return r.decode(e);throw RangeError(`Unable to decode multibase string ${JSON.stringify(e)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`)}}const s=(e,t)=>new n({...e.decoders||{[e.prefix]:e},...t.decoders||{[t.prefix]:t}});class i{constructor(r,n,s,i){this.name=r,this.prefix=n,this.baseEncode=s,this.baseDecode=i,this.encoder=new e(r,n,s),this.decoder=new t(r,n,i)}encode(e){return this.encoder.encode(e)}decode(e){return this.decoder.decode(e)}}const o=({name:e,prefix:t,encode:r,decode:n})=>new i(e,t,r,n),a=({prefix:e,name:t,alphabet:r})=>{const{encode:n,decode:s}=function(e,t){if(e.length>=255)throw new TypeError("Alphabet too long");for(var r=new Uint8Array(256),n=0;n<r.length;n++)r[n]=255;for(var s=0;s<e.length;s++){var i=e.charAt(s),o=i.charCodeAt(0);if(255!==r[o])throw new TypeError(i+" is ambiguous");r[o]=s}var a=e.length,h=e.charAt(0),c=Math.log(a)/Math.log(256),u=Math.log(256)/Math.log(a);function f(e){if("string"!=typeof e)throw new TypeError("Expected String");if(0===e.length)return new Uint8Array;var t=0;if(" "!==e[t]){for(var n=0,s=0;e[t]===h;)n++,t++;for(var i=(e.length-t)*c+1>>>0,o=new Uint8Array(i);e[t];){var u=r[e.charCodeAt(t)];if(255===u)return;for(var f=0,p=i-1;(0!==u||f<s)&&-1!==p;p--,f++)u+=a*o[p]>>>0,o[p]=u%256>>>0,u=u/256>>>0;if(0!==u)throw new Error("Non-zero carry");s=f,t++}if(" "!==e[t]){for(var d=i-s;d!==i&&0===o[d];)d++;for(var l=new Uint8Array(n+(i-d)),b=n;d!==i;)l[b++]=o[d++];return l}}}return{encode:function(t){if(t instanceof Uint8Array||(ArrayBuffer.isView(t)?t=new Uint8Array(t.buffer,t.byteOffset,t.byteLength):Array.isArray(t)&&(t=Uint8Array.from(t))),!(t instanceof Uint8Array))throw new TypeError("Expected Uint8Array");if(0===t.length)return"";for(var r=0,n=0,s=0,i=t.length;s!==i&&0===t[s];)s++,r++;for(var o=(i-s)*u+1>>>0,c=new Uint8Array(o);s!==i;){for(var f=t[s],p=0,d=o-1;(0!==f||p<n)&&-1!==d;d--,p++)f+=256*c[d]>>>0,c[d]=f%a>>>0,f=f/a>>>0;if(0!==f)throw new Error("Non-zero carry");n=p,s++}for(var l=o-n;l!==o&&0===c[l];)l++;for(var b=h.repeat(r);l<o;++l)b+=e.charAt(c[l]);return b},decodeUnsafe:f,decode:function(e){var r=f(e);if(r)return r;throw new Error(`Non-${t} character`)}}}(r,t);return o({prefix:e,name:t,encode:n,decode:e=>(e=>{if(e instanceof Uint8Array&&"Uint8Array"===e.constructor.name)return e;if(e instanceof ArrayBuffer)return new Uint8Array(e);if(ArrayBuffer.isView(e))return new Uint8Array(e.buffer,e.byteOffset,e.byteLength);throw new Error("Unknown type, must be binary type")})(s(e))})},h=({name:e,prefix:t,bitsPerChar:r,alphabet:n})=>o({prefix:t,name:e,encode:e=>((e,t,r)=>{const n="="===t[t.length-1],s=(1<<r)-1;let i="",o=0,a=0;for(let n=0;n<e.length;++n)for(a=a<<8|e[n],o+=8;o>r;)o-=r,i+=t[s&a>>o];if(o&&(i+=t[s&a<<r-o]),n)for(;i.length*r&7;)i+="=";return i})(e,n,r),decode:t=>((e,t,r,n)=>{const s={};for(let e=0;e<t.length;++e)s[t[e]]=e;let i=e.length;for(;"="===e[i-1];)--i;const o=new Uint8Array(i*r/8|0);let a=0,h=0,c=0;for(let t=0;t<i;++t){const i=s[e[t]];if(void 0===i)throw new SyntaxError(`Non-${n} character`);h=h<<r|i,a+=r,a>=8&&(a-=8,o[c++]=255&h>>a)}if(a>=r||255&h<<8-a)throw new SyntaxError("Unexpected end of data");return o})(t,n,r,e)});a({name:"base58btc",prefix:"z",alphabet:"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"}),a({name:"base58flickr",prefix:"Z",alphabet:"123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"}),h({prefix:"b",name:"base32",alphabet:"abcdefghijklmnopqrstuvwxyz234567",bitsPerChar:5}),h({prefix:"B",name:"base32upper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567",bitsPerChar:5}),h({prefix:"c",name:"base32pad",alphabet:"abcdefghijklmnopqrstuvwxyz234567=",bitsPerChar:5}),h({prefix:"C",name:"base32padupper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=",bitsPerChar:5}),h({prefix:"v",name:"base32hex",alphabet:"0123456789abcdefghijklmnopqrstuv",bitsPerChar:5}),h({prefix:"V",name:"base32hexupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV",bitsPerChar:5}),h({prefix:"t",name:"base32hexpad",alphabet:"0123456789abcdefghijklmnopqrstuv=",bitsPerChar:5}),h({prefix:"T",name:"base32hexpadupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV=",bitsPerChar:5}),h({prefix:"h",name:"base32z",alphabet:"ybndrfg8ejkmcpqxot1uwisza345h769",bitsPerChar:5}),new WeakMap;class c{constructor(e,t,r,n){this.code=t,this.version=e,this.multihash=r,this.bytes=n,this["/"]=n}get asCID(){return this}get byteOffset(){return this.bytes.byteOffset}get byteLength(){return this.bytes.byteLength}toV0(){switch(this.version){case 0:return this;case 1:{const{code:e,multihash:t}=this;if(e!==DAG_PB_CODE)throw new Error("Cannot convert a non dag-pb CID to CIDv0");if(t.code!==SHA_256_CODE)throw new Error("Cannot convert non sha2-256 multihash CID to CIDv0");return c.createV0(t)}default:throw Error(`Can not convert CID version ${this.version} to version 0. This is a bug please report`)}}toV1(){switch(this.version){case 0:{const{code:e,digest:t}=this.multihash,r=Digest.create(e,t);return c.createV1(this.code,r)}case 1:return this;default:throw Error(`Can not convert CID version ${this.version} to version 1. This is a bug please report`)}}equals(e){return c.equals(this,e)}static equals(e,t){const r=t;return r&&e.code===r.code&&e.version===r.version&&Digest.equals(e.multihash,r.multihash)}toString(e){return((e,t)=>{const{bytes:r,version:n}=e;return 0===n?toStringV0(r,baseCache(e),t||base58btc.encoder):toStringV1(r,baseCache(e),t||base32.encoder)})(this,e)}toJSON(){return{code:this.code,version:this.version,hash:this.multihash.bytes}}link(){return this}get[Symbol.toStringTag](){return"CID"}[Symbol.for("nodejs.util.inspect.custom")](){return`CID(${this.toString()})`}static asCID(e){if(null==e)return null;const t=e;if(t instanceof c)return t;if(null!=t["/"]&&t["/"]===t.bytes||t.asCID===t){const{version:e,code:r,multihash:n,bytes:s}=t;return new c(e,r,n,s||encodeCID(e,r,n.bytes))}if(!0===t[cidSymbol]){const{version:e,multihash:r,code:n}=t,s=Digest.decode(r);return c.create(e,n,s)}return null}static create(e,t,r){if("number"!=typeof t)throw new Error("String codecs are no longer supported");if(!(r.bytes instanceof Uint8Array))throw new Error("Invalid digest");switch(e){case 0:if(t!==DAG_PB_CODE)throw new Error(`Version 0 CID must use dag-pb (code: ${DAG_PB_CODE}) block encoding`);return new c(e,t,r,r.bytes);case 1:{const n=encodeCID(e,t,r.bytes);return new c(e,t,r,n)}default:throw new Error("Invalid version")}}static createV0(e){return c.create(0,DAG_PB_CODE,e)}static createV1(e,t){return c.create(1,e,t)}static decode(e){const[t,r]=c.decodeFirst(e);if(r.length)throw new Error("Incorrect length");return t}static decodeFirst(e){const t=c.inspectBytes(e),r=t.size-t.multihashSize,n=coerce(e.subarray(r,r+t.multihashSize));if(n.byteLength!==t.multihashSize)throw new Error("Incorrect length");const s=n.subarray(t.multihashSize-t.digestSize),i=new Digest.Digest(t.multihashCode,t.digestSize,s,n);return[0===t.version?c.createV0(i):c.createV1(t.codec,i),e.subarray(t.size)]}static inspectBytes(e){const t=()=>{const[t,r]=varint.decode(e.subarray(0));return t};let r=t(),n=DAG_PB_CODE;if(18===r||t(),0!==r&&1!==r)throw new RangeError(`Invalid CID version ${r}`);const s=t(),i=t(),o=0+i;return{version:r,codec:n,multihashCode:s,digestSize:i,multihashSize:o-0,size:o}}static parse(e,t){const[r,n]=parseCIDtoBytes(e,t),s=c.decode(n);return baseCache(s).set(r,e),s}}Symbol.for("@ipld/js-cid/CID")})()})();